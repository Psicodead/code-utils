const HtmlWebpackPlugin = require('html-webpack-plugin');
const CopyPlugin = require("copy-webpack-plugin");
const {DefinePlugin} = require('webpack');
const path = require('path');

var dotenv = require('dotenv').config({path: __dirname + '/.env'});


module.exports = {
  resolve: {
    modules: [
      path.resolve(__dirname, 'node_modules'),
      path.resolve(__dirname, './src/'),
      // path.resolve(__dirname, './static/'),
    ],
    alias: {
      '~': path.resolve(__dirname, './src/'),
    },
  },
  plugins: [
    new DefinePlugin({
      "process.env": dotenv.parsed
    }),
    new CopyPlugin({
      patterns: [
        { from: "static", to: "static" },
      ],
    }),
    new HtmlWebpackPlugin({
      template: './src/template/index.ejs',
      title: "test title"
    }),
   
  ],
  mode: 'development',
  output: {
    clean: true
  },
  devServer: {
    contentBase: './dist',
    open: true,
    https: true,
    host: process.env.HOST,
    port:  process.env.PORT,
  },
  module: {
    rules: [
      {
        test: /\.m?js$/,
        exclude: /(node_modules)/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: ['@babel/preset-env']
          }
        }
      },
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        use: {
          loader: 'file-loader',
          options: {
            name: '[path][name].[ext]',
          },
        },
      },
      {
        test: /\.(glsl|vs|fs|vert|frag)$/,
        exclude: /node_modules/,
        use: [
          'raw-loader',
          'glslify-loader'
        ]
      }
    ]
  }
};
